{
	"name": "menu_test_part2",
	"author": "Markus Maal",
	"texture": "__CONVERTED_menu_test_part2.png",
	"x": 0,
	"y": 4,
	"x2": 0,
	"y2": 2,
	"character": "=",
	"character2": "£",
	"bulletl": "$",
	"bulletr": "€",
	"finish_x": 19,
	"finish_x2": 0,
	"finish_y2": 5,
	"high": 12,
	"wide": 8,
	"gravity": 0,
	"jump": 0,
	"data": [
		"###              ###",
		"### -?@!@.,#äõü- ###",
		" ##              ## ",
		"-~õ|>@-ä@<_:;-?;õ!!-",
		"#-¤%#&õ./-#-(:),%;-#"
	],
	"walls": [
		"19x2"
	],
	"script": [
		"if (plr.bx, plr.by) == (6, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (7, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (8, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (9, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (10, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (11, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (12, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (1, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (2, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (3, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (4, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (5, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (6, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (7, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (8, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (9, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (10, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (11, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (12, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (13, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (14, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (15, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (16, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (17, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (18, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (19, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (6, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (7, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (8, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (9, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (10, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (11, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (12, 2): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (1, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (2, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (3, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (4, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (5, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (6, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (7, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (8, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (9, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (10, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (11, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (12, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (13, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (14, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (15, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (16, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (17, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (18, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (19, 3): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (1, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (2, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (3, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (4, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (5, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (6, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (7, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (8, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (9, 4): lvl.ChangeData((plr.bx, plr.by), \"{\")",
		"if (plr.bx, plr.by) == (2, 4): lvl.SwitchMap(\"menu_test.json\")",
		"if (plr.bx, plr.by) == (3, 4): lvl.SwitchMap(\"menu_test.json\")",
		"if (plr.bx, plr.by) == (4, 4): lvl.SwitchMap(\"menu_test.json\")",
		"if (plr.bx, plr.by) == (5, 4): lvl.SwitchMap(\"menu_test.json\")",
		"if (plr.bx, plr.by) == (6, 4): lvl.SwitchMap(\"menu_test.json\")",
		"if (plr.bx, plr.by) == (7, 4): lvl.SwitchMap(\"menu_test.json\")",
		"if (plr.bx, plr.by) == (8, 4): lvl.SwitchMap(\"menu_test.json\")"
	]
}
