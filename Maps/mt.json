{
	"name": "mt",
	"author": "Markus Maal",
	"texture": "__CONVERTED_mt.png",
	"x": 8,
	"y": 4,
	"x2": 10,
	"y2": 4,
	"character": ",",
	"character2": "ä",
	"bulletl": "õ",
	"bulletr": "ü",
	"finish_x": 0,
	"finish_y": 4,
	"finish_x2": 1,
	"finish_y2": 4,
	"high": 12,
	"wide": 8,
	"gravity": 0,
	"jump": 0,
	"data": [
		"##        -          -                 #",
		"##        -?        ?-  - ?            #",
		"##        -??      ??-  -??            #",
		"##        -@??    ???----??-- -        #",
		"##      ! -@@@@  ????- ???????         #",
		"##        -@@ @@?? @?-  -??            #",
		"##        -.@  @@  @@-  -@?            #",
		"##        -..      .@-  -@@?-          #",
		"##        -..      ..-   -@@?          #"
	],
	"walls": [
		"2x", "2x1", "2x6", "2x2", "2x7", "2x3", "2x4", "2x5", "2x6", "2x7", "2x8", "2x9"
	],
	"script": [
		"if (plr.bx, plr.by) == (11, 1): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 1): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 1): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 2): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 2): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 2): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 2): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (25, 2): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 2): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (13, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (18, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (25, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 3): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (13, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (14, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (17, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (18, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (23, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (24, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (25, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (27, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (28, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (29, 4): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (14, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (15, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (16, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (17, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (25, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 5): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (15, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (16, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (25, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 6): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (25, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (27, 7): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (11, 8): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (12, 8): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (19, 8): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (20, 8): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (26, 8): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (27, 8): lvl.ChangeData((plr.bx, plr.by), \" \")",
		"if (plr.bx, plr.by) == (28, 8): lvl.ChangeData((plr.bx, plr.by), \" \")"
	]
}